#!/bin/bash
source /usr/share/diskripper/config

#set -x

ripdir="${BD_ripdir}"
encdir="${movie_outdir}"
outformat="${BD_outformat}"

logdir=/home/${user}/.var/log/diskrip/bd/

install -d -o $user -g $user ${logdir}

echo "ripping disc " >> ${logdir}/.bdrip

ripdirSuffix=""
encdirSuffix=""
episodeStartNum=0 
  

###################

GetDiscname()
{
    discname=$(blkid -o value -s LABEL $device)
    discname=$(tr '_' ' ' <<<"$discname")
    discname=$(echo "$discname" | tr '[:upper:]' '[:lower:]')
    arr=( $discname )
    discname=${arr[@]^}
}

CalcEncodeDir()
{
  i=1

  while [ -d "${encdir}/${discname}${encdirSuffix}" ]; do
    ((i=i+1))
    encdirSuffix=".$i"
  done

  encdir="${encdir}/${discname}${encdirSuffix}"
  install -d -o $user -g $user  "$encdir"
}

RipDisk()
{
  echo "ripping disc $discname" > "$logfile"

  i=1

  while [ -d "${ripdir}/${discname}${ripdirSuffix}" ]; do
    ((i=i+1))
    ripdirSuffix=".$i"
  done

  ripdir=${ripdir}/${discname}${ripdirSuffix}
  install -d -o $user -g $user "$ripdir"
  
  if [[ $test == true ]]; then
    echo "makemkvcon -r --progress=stdout --minlength=1500 --decrypt mkv dev:$device $titlenum \"$ripdir\""
  else
    makemkvcon -r --progress=stdout --minlength=1500 --decrypt mkv dev:$device $titlenum "$ripdir" >> "$logfile"; 
  fi
  
  sleep 2 ;
}


EncodeFiles()
{
  IFS=',' read -ra encfiles <<< "$encFileNums"
  
  numFiles=`find "$ripdir" -maxdepth 1 -iname "*.${outformat}" -printf x | wc -c`
  
  if [[ $episodeStartNum > 0 ]]; then
    e=$episodeStartNum
  else
    e=1
  fi
  
  i=1
    
  while IFS= read -r -d $'\0' file; 
  do 
    if [[ ! ${encfiles[@]} =~ $i ]]; then
      continue
    fi
    title=$(mkvinfo "${file}" | grep Title)
    title=${title:11}
    
    fileoutname="${title}"

    if (( $numFiles > 1 )); then
      fileoutname="${fileoutname}_$e"
      ((e=e+1))
    fi

    fileoutname="${fileoutname}.${outformat}"
    
    
    if [[ $move == true ]]; then 
      mv "$file" "${encdir}/${fileoutname}"
    else 
      if [[ $encode == true ]] ; then
    
        echo "Encoding $file to ${fileoutname}" >> "$logfile";
        
        if [[ $test == true ]]; then
          echo "ffmpeg -nostdin -y -hwaccel cuda -hwaccel_output_format cuda -i \"${file}\" -c:v hevc_nvenc -gpu any -rc constqp -cq 22 \"${encdir}/${fileoutname}\""
        else
          ffmpeg -loglevel level+error -nostdin -y -hwaccel cuda -hwaccel_output_format cuda -i "${file}" -c:v hevc_nvenc -gpu any -rc constqp -cq 22 "${encdir}/${fileoutname}" 2>> "$logfile";
          RC=$?
          if [ "${RC}" -eq "0" ]; then
          
            echo "removing $file" 
              #rm "$file" 
          fi
        fi  
      fi
    fi
    
    echo "File = ${encdir}/${fileoutname} ----  Disc = ${discname}" >> "${logdir}riplist.txt"
    
    ((i=i+1))
  done < <(find "$ripdir" -maxdepth 1 -iname "*.${outformat}" -print0 | sort -z)
}

###################

RipDiskMode()
{
  titlenum="all"
  encode=true
  while getopts ":t:Tme" flag; do
      case ${flag} in
        t)  titlenum=${OPTARG}
            shift 2 ;;
        T)  test=true
            shift;;  
        m)  move=true
            shift;;  
        e)  encode=true
            shift;;  
      esac
  done
  
  device=$1
  GetDiscname
  logfile="${logdir}${discname}.log"
  RipDisk
  if [[ $move == true ]] ||  [[ $encode == true ]] ; then
    CalcEncodeDir
    EncodeFiles
  fi
  eject -r $device
}

EncodeMode()
{
  while getopts ":d:r:e:s:f:T" flag; do
      case ${flag} in
        d)  discname=${OPTARG};;
        r)  ripdirSuffix=${OPTARG};;
        e)  encdirSuffix=${OPTARG};;
        s)  episodeStartNum=${OPTARG};;
        f)  encFileNums=${OPTARG};;
        T)  test=true;;  
      esac
  done
  
  logfile="${logdir}${discname}.log"
  ripdir=${ripdir}/${discname}${ripdirSuffix}
  encdir="${encdir}/${discname}${encdirSuffix}"
  install -d -o $user -g $user "$encdir"
  EncodeFiles
}

EpisodeRenameMode()
{
  while getopts ":i:n:s:T" flag; do
      case ${flag} in
        i)  inpaths=${OPTARG};;
        n)  seriesName=${OPTARG};;
        s)  season=${OPTARG};;
        T)  test=true;;  
      esac
  done
  
  outdir="${tv_outdir}/${seriesName}/season ${season}"
  install -d "$outdir"
  
  e=1
  
  IFS='|' read -ra paths <<< "$inpaths"
  for in in "${paths[@]}"; do
    numFiles=`find "$in" -maxdepth 1 -iname "*.${outformat}" -printf x | wc -c`
    echo $e
        
    while IFS= read -r -d $'\0' file; 
    do
      if [[ $test == true ]]; then echo "mv \"$file\" \"${outdir}/${seriesName} - S${season}E${e}.${outformat}\""
      else
        mv "$file" "${outdir}/${seriesName} - S${season}E${e}.${outformat}"
      fi
      ((e=$e+1))
    done < <(find "$in" -maxdepth 1 -iname "*.${outformat}" -print0 | sort -z)
    
  done
}

InfoMode()
{ 
  device=$1
  makemkvcon --progress=stdout --minlength=1500 info dev:$device | grep ""
}

###################

mode=$1
shift

case $mode in
  ripdisk)  RipDiskMode "${@}";;
  encode)   EncodeMode  "${@}";;
  episodes)   EpisodeRenameMode "${@}";;
  "info")   InfoMode "${@}";;
esac 
